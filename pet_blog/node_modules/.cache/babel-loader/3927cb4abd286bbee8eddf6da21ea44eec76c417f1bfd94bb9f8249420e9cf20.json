{"ast":null,"code":"var _jsxFileName = \"/home/anderson/DEV/projects/django/drf_react_pet_blog/frontend/pet_blog/src/pages/TopicPosts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, Navigate, Link, useNavigate } from 'react-router-dom';\nimport { getPostData, getTopicData } from '../utils/api';\nimport LoadingPage from './LoadingPage';\nimport { url } from './PostList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TopicPosts() {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const [postArray, setPostArray] = useState(null);\n  const [topicsArray, setTopicsArray] = useState(null);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [topic, setTopic] = useState(state.topic);\n  const [topicMenuOpen, setTopicMenuOpen] = useState(false);\n  const navigate = useNavigate();\n  const updateTopic = () => {\n    navigate(`.?filter=${topic}`, {\n      state: {\n        topic: topic\n      }\n    });\n  };\n  const getPosts = async () => {\n    try {\n      const data = await getPostData(`${url}/api/posts`);\n      setPostArray(data);\n    } catch (error) {\n      console.log(error.message);\n      setIsLoading(false);\n      setIsError(true);\n    }\n  };\n  const getTopics = async () => {\n    try {\n      const data = await getTopicData(`${url}/api/topics`);\n      const topics = data.reduce((total, topic) => {\n        if (!total.includes(topic.name)) {\n          total.push(topic.name);\n        }\n        return total;\n      }, ['All Posts']);\n      setTopicsArray(topics);\n    } catch ({\n      message\n    }) {\n      setIsLoading(false);\n      setIsError({\n        error: message\n      });\n      console.log(message);\n    }\n  };\n  const posts = postArray && state && postArray.filter(post => post.topic === state.topic);\n  useEffect(() => {\n    getPosts();\n  }, []);\n  useEffect(() => {\n    getTopics();\n  }, []);\n  if (postArray && topicsArray) {\n    const timeOutID = setTimeout(() => {\n      setIsLoading(false);\n      clearTimeout(timeOutID);\n    }, 1000);\n  }\n  if (state && state.topic.toLowerCase().replaceAll(' ', '') === 'allposts') {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  }\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  }\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/error\",\n      replace: true,\n      state: {\n        message: isError.error\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topic-posts-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topic-posts-navbar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"topic-posts-navbar__toggle-btns-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"topic-posts-navbar__nav-bar-text\",\n            children: \"Topic:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"topic-change-input\",\n            onChange: updateTopic,\n            value: topic,\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"topic-posts-navbar__toggle-btns\",\n            children: !topicMenuOpen ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setTopicMenuOpen(true),\n              className: \"topic-post-toggle-btn\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-chevron-down\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setTopicMenuOpen(false),\n              className: \"topic-post-toggle-btn\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-chevron-up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), topicMenuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"topic-posts-navbar__topics-btns\",\n            children: topicsArray && topicsArray.map(obj => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: obj === 'All Posts' ? /*#__PURE__*/_jsxDEV(Link, {\n                  className: \"topic-btn\",\n                  to: \"/posts\",\n                  children: obj\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 49\n                }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"topic-btn\",\n                  onClick: () => {\n                    setTopic(obj);\n                    setTopicMenuOpen(false);\n                  },\n                  children: obj\n                }, obj, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n_s(TopicPosts, \"pxZy7XQ8gvQiNSI+QxN9M0W38X0=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = TopicPosts;\nexport default TopicPosts;\nvar _c;\n$RefreshReg$(_c, \"TopicPosts\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","Navigate","Link","useNavigate","getPostData","getTopicData","LoadingPage","url","jsxDEV","_jsxDEV","Fragment","_Fragment","TopicPosts","_s","state","postArray","setPostArray","topicsArray","setTopicsArray","isError","setIsError","isLoading","setIsLoading","topic","setTopic","topicMenuOpen","setTopicMenuOpen","navigate","updateTopic","getPosts","data","error","console","log","message","getTopics","topics","reduce","total","includes","name","push","posts","filter","post","timeOutID","setTimeout","clearTimeout","toLowerCase","replaceAll","to","fileName","_jsxFileName","lineNumber","columnNumber","replace","children","className","onChange","value","type","onClick","map","obj","_c","$RefreshReg$"],"sources":["/home/anderson/DEV/projects/django/drf_react_pet_blog/frontend/pet_blog/src/pages/TopicPosts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useLocation, Navigate, Link, useNavigate } from 'react-router-dom'\nimport { getPostData, getTopicData } from '../utils/api'\nimport LoadingPage from './LoadingPage'\nimport { url } from './PostList'\n\n\n\nfunction TopicPosts() {\n    const {state} = useLocation()\n    const [postArray, setPostArray] = useState(null)\n    const [topicsArray, setTopicsArray] = useState(null)\n    const [isError, setIsError] = useState(false)\n    const [isLoading, setIsLoading] = useState(true)\n    const [topic, setTopic] = useState(state.topic)\n    const [topicMenuOpen, setTopicMenuOpen] = useState(false)\n    const navigate = useNavigate()\n\n    const updateTopic = ()=> {\n        navigate(`.?filter=${topic}`, {state:{topic:topic}})\n    }\n\n     const getPosts =  async()=> {\n        try {\n            const data = await getPostData(`${url}/api/posts`)\n            setPostArray(data)\n    \n        } catch (error) {\n            console.log(error.message)\n            setIsLoading(false)\n            setIsError(true)\n        }\n    }\n\n    const getTopics = async()=> {\n        try {\n            const data = await getTopicData(`${url}/api/topics`)\n            const topics = data.reduce((total, topic)=> {\n                if(!total.includes(topic.name)){\n                    total.push(topic.name)\n                }\n                return total\n            }, ['All Posts'])\n            setTopicsArray(topics)\n           \n        } catch ({message}) {\n            setIsLoading(false)\n            setIsError({error:message})\n            console.log(message)\n        }\n    }\n\n    const posts = postArray && state && postArray.filter((post)=> post.topic === state.topic)\n    \n    useEffect(()=> {\n        getPosts()\n    }, [])\n\n    useEffect(()=> {\n        getTopics()\n    }, [])\n\n    \n    if(postArray && topicsArray) {\n        const timeOutID = setTimeout(()=> {\n            setIsLoading(false)\n            clearTimeout(timeOutID)\n        }, 1000)\n    }\n\n    if(state && state.topic.toLowerCase().replaceAll(' ', '') === 'allposts') {\n        return (\n            <Navigate to='/posts'/>\n        )\n    }\n    if(isLoading) {\n        return (\n            <LoadingPage />\n        )\n    }\n    if(isError) {\n        return (\n            <Navigate to='/error' replace={true} state={{message:isError.error}} />\n        )\n    }\n    return (\n        <React.Fragment>\n            <div className=\"bg-img\"></div>\n            <div className=\"topic-posts-container\">\n                <div className='topic-posts-navbar'>\n                    <div className='topic-posts-navbar__toggle-btns-container'>\n                        <p className='topic-posts-navbar__nav-bar-text'>Topic:</p>\n                        <input className='topic-change-input' onChange={updateTopic} value={topic} type=\"text\" />\n                        <div className='topic-posts-navbar__toggle-btns'>\n                            {!topicMenuOpen ?\n                                <button onClick={()=>setTopicMenuOpen(true)} className='topic-post-toggle-btn'>\n                                    <i className=\"fa fa-chevron-down\"></i>\n                                </button>\n                            :\n                                <button onClick={()=>setTopicMenuOpen(false)} className='topic-post-toggle-btn'>\n                                    <i className=\"fa fa-chevron-up\"></i>\n                                </button>\n                            }\n                            \n                        </div>\n                        {topicMenuOpen && \n                            <div className=\"topic-posts-navbar__topics-btns\">\n                                {topicsArray && topicsArray.map((obj)=> {\n                                    return (\n                                        <>\n                                            { obj === 'All Posts' ? \n                                                <Link className='topic-btn' to='/posts'>{obj}</Link>\n                                            :\n                                                <button className='topic-btn' key={obj} onClick={()=> {\n                                                    setTopic(obj)\n                                                    setTopicMenuOpen(false)\n                                                }}>{obj}</button>\n                                            }\n                                        </>\n                                    )\n                                })}\n                            </div>\n                        }\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default TopicPosts"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}