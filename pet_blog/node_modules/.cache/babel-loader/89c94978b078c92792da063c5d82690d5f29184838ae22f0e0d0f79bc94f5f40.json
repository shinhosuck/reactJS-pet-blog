{"ast":null,"code":"export const validatePost = newPost => {\n  const keys = Object.keys(newPost);\n  const reduce = keys.reduce((postObj, item) => {\n    const key = !newPost[item] && item;\n    if (key) {\n      return {\n        ...postObj,\n        [key]: ''\n      };\n    } else {\n      return postObj;\n    }\n  }, {});\n  return Object.keys(reduce).length === 0 ? '' : reduce;\n};\nexport const passwordCheck = password => {\n  const upperChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\n  const lowerChars = 'abcdefghijklmnopqrstuvwxyz'.split('');\n  const number = '0123456789'.split('');\n  const upper = [];\n  const lower = [];\n  const num = [];\n  password.split('').forEach(i => {\n    if (upperChars.includes(i)) {\n      upper.push(i);\n    } else if (lowerChars.includes(i)) {\n      lower.push(i);\n    } else if (number.includes(i)) {\n      num.push(i);\n    }\n  });\n  if (upper.length > 0 && lower.length > 0 && num.length > 0) {\n    return true;\n  }\n  return false;\n};\nexport const newUserInfoCheck = newUser => {\n  let invalid = {};\n  if (!Object.values(newUser).includes('') && newUser.password === newUser.passwordConfirmation) {\n    return 'validated';\n  } else if (!newUser.username) {\n    newUser = {\n      ...newUser,\n      username: 'This field is required'\n    };\n  } else if (!newUser.password) {\n    newUser = {\n      ...newUser,\n      password: 'This field is required'\n    };\n  } else if (!newUser.passwordConfirmation) {\n    newUser = {\n      ...newUser,\n      passwordConfirmation: 'This field is required'\n    };\n  } else if (newUser.password !== newUser.passwordConfirmation) {\n    newUser = {\n      ...newUser,\n      passwordMismatch: 'Password confirmation failed'\n    };\n  }\n  console.log(newUser);\n  return invalid;\n};","map":{"version":3,"names":["validatePost","newPost","keys","Object","reduce","postObj","item","key","length","passwordCheck","password","upperChars","split","lowerChars","number","upper","lower","num","forEach","i","includes","push","newUserInfoCheck","newUser","invalid","values","passwordConfirmation","username","passwordMismatch","console","log"],"sources":["/home/anderson/DEV/projects/django/drf_react_pet_blog/frontend/pet_blog/src/utils/utils.js"],"sourcesContent":["\n\nexport const validatePost = (newPost)=> {\n    const keys = Object.keys(newPost)\n    const reduce = keys.reduce((postObj, item)=>{\n        const key = !newPost[item] && item\n        if(key){\n            return {...postObj,[key]:'' }\n        }else {\n            return postObj\n        }\n    }, {})\n    return Object.keys(reduce).length  === 0 ? '' : reduce\n}\n\n\nexport const passwordCheck = (password) => {\n    const upperChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('')\n    const lowerChars = 'abcdefghijklmnopqrstuvwxyz'.split('')\n    const number = '0123456789'.split('')\n\n    const upper = []\n    const lower = []\n    const num = []\n\n    password.split('').forEach((i) => {\n        if(upperChars.includes(i)){\n            upper.push(i)\n        }else if(lowerChars.includes(i)){\n            lower.push(i)\n        }else if(number.includes(i)){\n            num.push(i)\n        }\n    })\n   if(upper.length > 0 && lower.length > 0 && num.length > 0) {\n    return true\n   }\n   return false\n}\n\n\nexport const newUserInfoCheck = (newUser)=> {\n    let invalid = {}\n    if(!Object.values(newUser).includes('')\n        &&newUser.password===newUser.passwordConfirmation){\n            return 'validated'\n\n    }else if(!newUser.username) {\n        newUser = {...newUser, username:'This field is required'}\n\n    }else if(!newUser.password) {\n        newUser = {...newUser, password:'This field is required'}\n\n    }else if(!newUser.passwordConfirmation) {\n        newUser= {...newUser, passwordConfirmation:'This field is required'}\n\n    }else if(newUser.password !== newUser.passwordConfirmation) {\n        newUser = {...newUser, passwordMismatch:'Password confirmation failed'}\n    }\n    console.log(newUser)\n    return invalid\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}