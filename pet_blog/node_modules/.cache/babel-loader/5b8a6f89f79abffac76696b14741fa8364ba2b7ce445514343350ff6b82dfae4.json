{"ast":null,"code":"var _jsxFileName = \"/home/anderson/DEV/projects/django/drf_react_pet_blog/frontend/pet_blog/src/pages/TopicPosts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getPostData, getTopicData } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst topicsUrl = 'http://127.0.0.1:8000/api/topics/';\nconst postsUrl = 'http://127.0.0.1:8000/api/posts/';\nfunction TopicPosts() {\n  _s();\n  const [postArray, setPostArray] = useState(null);\n  const [topic, setTopic] = useState(null);\n  const {\n    state\n  } = useLocation();\n  const getPosts = async () => {\n    try {\n      const data = await getPostData(postsUrl);\n      setPostArray(data);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  const getTopics = async () => {\n    try {\n      const data = await getTopicData(topicsUrl);\n      const topics = data.reduce((total, topic) => {\n        if (!total.includes(topic.name)) {\n          total.push(topic.name);\n        }\n        return total;\n      }, []);\n      console.log(topics);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  const posts = postArray && topic && postArray.filter(post => post.topic === state.topic);\n  useEffect(() => {\n    getPosts();\n    if (state) {\n      setTopic(state.topic);\n    }\n  }, []);\n  useEffect(() => {\n    getTopics();\n  }, []);\n  console.log(topic);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"topic-posts-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topic-posts-container__topics-btns\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(TopicPosts, \"woFpOV5NtTIqg0SJk837rhIRdfg=\", false, function () {\n  return [useLocation];\n});\n_c = TopicPosts;\nexport default TopicPosts;\nvar _c;\n$RefreshReg$(_c, \"TopicPosts\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","getPostData","getTopicData","jsxDEV","_jsxDEV","topicsUrl","postsUrl","TopicPosts","_s","postArray","setPostArray","topic","setTopic","state","getPosts","data","error","console","log","message","getTopics","topics","reduce","total","includes","name","push","posts","filter","post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/anderson/DEV/projects/django/drf_react_pet_blog/frontend/pet_blog/src/pages/TopicPosts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { getPostData, getTopicData } from '../utils/api'\n\n\n\nconst topicsUrl = 'http://127.0.0.1:8000/api/topics/'\nconst postsUrl = 'http://127.0.0.1:8000/api/posts/'\n\nfunction TopicPosts() {\n    const [postArray, setPostArray] = useState(null)\n    const [topic, setTopic] = useState(null)\n    const {state} = useLocation()\n\n     const getPosts =  async()=> {\n        try {\n            const data = await getPostData(postsUrl)\n            setPostArray(data)\n        } catch (error) {\n            console.log(error.message)\n        }\n    }\n\n    const getTopics = async()=> {\n        try {\n            const data = await getTopicData(topicsUrl)\n            const topics = data.reduce((total, topic)=> {\n                if(!total.includes(topic.name)){\n                    total.push(topic.name)\n                }\n                return total\n            }, [])\n            console.log(topics)\n        } catch (error) {\n            console.log(error.message)\n        }\n    }\n\n    const posts = postArray && topic && postArray.filter((post)=> post.topic === state.topic)\n\n    useEffect(()=> {\n        getPosts()\n        if(state) {\n            setTopic(state.topic)\n        }\n    }, [])\n\n    useEffect(()=> {\n        getTopics()\n    }, [])\n\n    console.log(topic)\n\n    return (\n        <div className='topic-posts-container'>\n            <div className=\"topic-posts-container__topics-btns\">\n                {/* {topics.map((obj)=> {\n                    return (\n                        <button key={obj}>{obj}</button>\n                    )\n                })} */}\n            </div>\n        </div>\n    )\n}\n\nexport default TopicPosts"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,EAAEC,YAAY,QAAQ,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIxD,MAAMC,SAAS,GAAG,mCAAmC;AACrD,MAAMC,QAAQ,GAAG,kCAAkC;AAEnD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM;IAACe;EAAK,CAAC,GAAGb,WAAW,CAAC,CAAC;EAE5B,MAAMc,QAAQ,GAAI,MAAAA,CAAA,KAAU;IACzB,IAAI;MACA,MAAMC,IAAI,GAAG,MAAMd,WAAW,CAACK,QAAQ,CAAC;MACxCI,YAAY,CAACK,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;IAC9B;EACJ,CAAC;EAED,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAU;IACxB,IAAI;MACA,MAAML,IAAI,GAAG,MAAMb,YAAY,CAACG,SAAS,CAAC;MAC1C,MAAMgB,MAAM,GAAGN,IAAI,CAACO,MAAM,CAAC,CAACC,KAAK,EAAEZ,KAAK,KAAI;QACxC,IAAG,CAACY,KAAK,CAACC,QAAQ,CAACb,KAAK,CAACc,IAAI,CAAC,EAAC;UAC3BF,KAAK,CAACG,IAAI,CAACf,KAAK,CAACc,IAAI,CAAC;QAC1B;QACA,OAAOF,KAAK;MAChB,CAAC,EAAE,EAAE,CAAC;MACNN,OAAO,CAACC,GAAG,CAACG,MAAM,CAAC;IACvB,CAAC,CAAC,OAAOL,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;IAC9B;EACJ,CAAC;EAED,MAAMQ,KAAK,GAAGlB,SAAS,IAAIE,KAAK,IAAIF,SAAS,CAACmB,MAAM,CAAEC,IAAI,IAAIA,IAAI,CAAClB,KAAK,KAAKE,KAAK,CAACF,KAAK,CAAC;EAEzFZ,SAAS,CAAC,MAAK;IACXe,QAAQ,CAAC,CAAC;IACV,IAAGD,KAAK,EAAE;MACND,QAAQ,CAACC,KAAK,CAACF,KAAK,CAAC;IACzB;EACJ,CAAC,EAAE,EAAE,CAAC;EAENZ,SAAS,CAAC,MAAK;IACXqB,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAENH,OAAO,CAACC,GAAG,CAACP,KAAK,CAAC;EAElB,oBACIP,OAAA;IAAK0B,SAAS,EAAC,uBAAuB;IAAAC,QAAA,eAClC3B,OAAA;MAAK0B,SAAS,EAAC;IAAoC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAM9C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC3B,EAAA,CAvDQD,UAAU;EAAA,QAGCP,WAAW;AAAA;AAAAoC,EAAA,GAHtB7B,UAAU;AAyDnB,eAAeA,UAAU;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}